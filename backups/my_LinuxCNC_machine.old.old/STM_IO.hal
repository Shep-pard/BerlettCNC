
#First load the Python user module
loadusr -Wn STM_IO /home/berlett/linuxcnc/configs/my_LinuxCNC_machine/STM_IO

#Second 'unlinkp' our pins to make them available for use.
# Then use 'net' to recreate/hook into them.

#net 


#net my-jogspeed halui.axis.jog-speed <= arduino.speed
#net my-jogxminus halui.axis.x.minus <= arduino.x-minus
##net my-jogxplus halui.axis.x.plus <= arduino.x-plus
#net my-jogyminus halui.axis.y.minus <= arduino.y-minus
#net my-jogyplus halui.axis.y.plus <= arduino.y-plus

# Spindle power
#unlinkp spindle.0.on
#net spindle-On arduino.spindleEnable <= spindle.0.on

# Stop
#unlinkp iocontrol.0.user-enable-out
#net estop-out arduino.stop

#unlinkp joint.0.motor-pos-cmd
#net xpos-cmd joint.0.motor-pos-cmd => arduino.axis0-cmd

#unlinkp joint.1.motor-pos-cmd
#net ypos-cmd joint.1.motor-pos-cmd => arduino.axis1-cmd

#unlinkp joint.2.motor-pos-cmd
#net zpos-cmd joint.2.motor-pos-cmd => arduino.axis2-cmd

net Button01   <= STM_IO.IN.36 => STM_IO.OUT.39
net Button001  <= STM_IO.IN.33 => STM_IO.OUT.12
net Button0001 <= STM_IO.IN.35 => STM_IO.OUT.38
net ButtonA-   <= STM_IO.IN.39 => STM_IO.OUT.09
net ButtonA+   <= STM_IO.IN.42 => STM_IO.OUT.05
net ButtonX-   <= STM_IO.IN.10 => STM_IO.OUT.24
net ButtonX+   <= STM_IO.IN.38 => STM_IO.OUT.26
net ButtonY-   <= STM_IO.IN.16 => STM_IO.OUT.42
net ButtonY+   <= STM_IO.IN.14 => STM_IO.OUT.02
net ButtonZ-   <= STM_IO.IN.12 => STM_IO.OUT.07
net ButtonZ+   <= STM_IO.IN.43 => STM_IO.OUT.33
net ButtonLockX<= STM_IO.IN.24 => STM_IO.OUT.22
net ButtonLockY<= STM_IO.IN.40 => STM_IO.OUT.25
net ButtonLockZ<= STM_IO.IN.11 => STM_IO.OUT.35
net ButtonSpdlL<= STM_IO.IN.23 => STM_IO.OUT.06
net ButtonSpdlR<= STM_IO.IN.15 => STM_IO.OUT.18










